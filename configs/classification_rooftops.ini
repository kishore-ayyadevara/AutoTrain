[project]
owner = sizhky
name = rooftops
location = ${project.name}
model_directory = ${project.location}/models
type = classification
num_classes = 10
data_source_url = https =//yyr-sample-datasets.s3.us-east-2.amazonaws.com/rooftop-detection.tar.xz

[architecture]
image_size = 128
[architecture.backbone]
model = resnet18
# everytime you change the model, vector size 
# must match the model's backbone output.
vector_size = 512
[architecture.head]
@head = custom_head
head_input_size = ${architecture.backbone.vector_size}
num_classes = ${project.num_classes}

[training]
dir = ~/data/rooftop-detection
train_ratio = 0.8
[training.preprocess]
@preprocess_function = my_preprocess
image_size = ${architecture.image_size}

[training.data]
train_dir = ${training.dir}/train
validation_dir = ${training.dir}/validation
[training.data.load_datablocks]
@load_function = load_rooftops

[training.scheme]
epochs = 125
freeze_epochs = 25
batch_size = 64
# initial_checkpoint = ${online_training.save_dir}
output = ${project.model_directory}/trained-model-v1
output_path = ${training.scheme.output}/model.pth

[testing]
[testing.preprocess]
@preprocess_function = my_preprocess
image_size = ${architecture.image_size}

[testing.postprocess]
@postprocess_function = convert_rooftop_label_mapping

